//go:generate go run gen.go
//go:generate templ generate

//go:build ignore
// +build ignore

package main

import (
	"io"
	"log"
	"os"
	"path/filepath"
	"strings"
	"text/template"

	"github.com/a-h/templ"
	"github.com/iancoleman/strcase"
)

func main() {
	// Read svgs directory and generate go templ files for each svg
	dir, err := os.ReadDir("svgs")
	if err != nil {
		log.Fatal(err)
	}

	for _, file := range dir {
		if file.IsDir() {
			continue
		}
		name := file.Name()
		if filepath.Ext(name) != ".svg" {
			continue
		}
		name = strings.TrimSuffix(name, ".svg")

		f, err := os.Open("svgs/" + file.Name())
		if err != nil {
			log.Fatal(err)
		}
		defer f.Close()
		b, err := io.ReadAll(f)
		if err != nil {
			log.Fatal(err)
		}

		fileName := strcase.ToSnake(name)

		// Make sure the icons directory exists
		err = os.MkdirAll("icons", 0755)
		if err != nil {
			log.Fatal(err)
		}

		f, err = os.Create("icons/" + fileName + ".templ")
		if err != nil {
			log.Fatal(err)
		}

		var data = string(b)

		data = strings.ReplaceAll(data, "\"currentColor\"", "{colors.ColorsOrFallback(color...)}")

		iconTemplate.Execute(f, struct {
			Name string
			Data string
		}{
			Name: strcase.ToCamel(name),
			Data: strings.TrimSpace(data),
		})
		log.Println(templ.Version())
	}
}

var iconTemplate = template.Must(template.New("").Parse(`// Code generated by go-templ-radix-icons - DO NOT EDIT.
package icons

import "github.com/bbassie/go-templ-radix-icons/colors"

templ {{.Name}}Icon(color ...string) {
{{.Data}}
}`))
